{"version":3,"sources":["pages/EzHeader.js","pages/EzLogViewer/LogListColumn.js","pages/EzLogViewer/LogListTable.js","pages/EzLogViewer/EzLogViewerList.js","pages/EzLogViewer/LogDetailColumn.js","pages/EzLogViewer/LogDetailTable.js","pages/EzLogViewer/EzLogViewerDetail.js","pages/EzLogViewer/index.js","EzLogViewerApp.js","stores/EzLogViewerStore.js","stores/EzRootStore.js","serviceWorker.ts","index.js","EzAgent.js"],"names":["EzHeader","inject","observer","props","displayName","anyFunc0","console","log","handleClick","state","date","searchDate","getFormatDate","ezLogViewerStore","searchLog","year","getFullYear","month","getMonth","day","getDate","Date","initDate","this","id","Navbar","variant","expand","Brand","href","src","alt","Toggle","aria-controls","Collapse","Nav","className","dateFormat","selected","onChange","setState","popperModifiers","preventOverflow","enabled","popperPlacement","todayButton","Form","inline","size","onClick","React","Component","selMethodOpts","logListColumns","dataField","text","headerAlign","style","width","maxWidth","headerStyle","filter","textFilter","placeholder","fontSize","align","formatter","cell","row","format","occurrenceDate","logInfo","selectFilter","options","alignItems","hidden","processTime","rowIndex","formatExtraData","color","LogListTable","loading","paginationSize","pageStartIndex","prePageText","nextPageText","showTotal","sizePerPageList","value","rowEvents","e","setDetailInfo","keyField","data","columns","filterFactory","pagination","paginationFactory","hover","condensed","wrapperClasses","rowStyle","overflow","whiteSpace","textOverflow","noDataIndication","overlay","overlayFactory","spinner","styles","base","background","controllerList","LoadingIndication","textAlign","NoDataIndication","EzLogViewerList","Container","Row","logDetailColumns","LogDetailTable","detailList","EzLogViewerDetail","url","statusCode","response","theme","EzLogViewer","bg","fluid","Col","lg","EzLogViewerApp","minHeight","window","innerHeight","EzLogViewerStore","editResponseList","editList","forEach","item","index","array","processMethod","responseCode","errorYN","isError","undefined","responseList","agent","forResourceValidateLocal","then","res","service","includes","catch","action","err","body","errors","finally","jsonFileUri","isloading","forResourceValidateDummy","observable","loadValidation","processGroupId","trim","EzRootStore","Boolean","location","hostname","match","ezRootStore","RenderComponent","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","API_ROOT","superagent","superagentPromise","_superagent","global","Promise","handleErrors","status","debug","responseBody","requests","get","set","end","forResourceValidate"],"mappings":"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","file":"static/js/main.6561742d.chunk.js","sourcesContent":["/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: \\src\\pages\\EzHeader.js\r\n * 3.개요: 앱 헤더 - 전역정보UI 표시 (뷰)\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React from 'react';\r\nimport { Nav, Navbar, Form } from 'react-bootstrap';\r\nimport { inject, observer } from 'mobx-react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FcSearch } from \"react-icons/fc\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: EzHeader\r\n// Desc: 헤더 뷰, 날짜 검색 기능\r\n// =================================================================================\r\n@inject(\"ezLogViewerStore\")\r\n@observer\r\nclass EzHeader extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzHeader 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date : new Date()\r\n        }\r\n    }\r\n\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n        const initDate = this.getFormatDate(new Date())\r\n\r\n        this.props.ezLogViewerStore.searchLog(initDate);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"logViewerHeader\">\r\n            <Navbar variant=\"dark\" expand=\"lg\">\r\n                &emsp;&emsp;&emsp;&emsp;\r\n                {/* Logo */}\r\n                <Navbar.Brand href=\"/\">\r\n                <img src=\"./images/ez-logo.png\" \r\n                    alt=\"ezCaretech logo\" />\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\"/>\r\n                \r\n                {/* Date Picker */}\r\n                <DatePicker \r\n                    className=\"myDatePicker\"  \r\n                    dateFormat=\"yyyy-MM-dd\"\r\n                    selected={this.state.date}\r\n                    onChange={(date) => {this.setState({date:date})}}\r\n                    popperModifiers={{ // 모바일 web 환경에서 화면을 벗어나지 않도록 하는 설정\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        },\r\n                    }}\r\n                    popperPlacement=\"auto\"\r\n                    todayButton=\"Today\"\r\n                />\r\n\r\n                <Form inline>\r\n                    &nbsp;<FcSearch size=\"2em\" onClick={this.handleClick}/>\r\n                    &emsp;&emsp;&emsp;&emsp;\r\n                </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n        console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 검색 버튼 클릭 이벤트 \r\n    // ---------------------------\r\n    handleClick = () => {\r\n        console.log('===== 검색 날짜 =====');\r\n        console.log(this.state.date);\r\n\r\n        let searchDate = this.getFormatDate(this.state.date);\r\n        console.log(searchDate);\r\n\r\n        this.props.ezLogViewerStore.searchLog(searchDate);\r\n    }\r\n\r\n    // ---------------------------\r\n    // 날짜 'yyyy-MM-dd' 포맷으로 반환\r\n    // ---------------------------\r\n    getFormatDate = (date) => {\r\n        var year = date.getFullYear();              //yyyy\r\n        var month = (1 + date.getMonth());          //M\r\n        month = month >= 10 ? month : '0' + month;  //month 두자리로 저장\r\n        var day = date.getDate();                   //d\r\n        day = day >= 10 ? day : '0' + day;          //day 두자리로 저장\r\n        \r\n        return  year + '-' + month + '-' + day;       //'-' 추가하여 yyyy-mm-dd 형태 생성 가능\r\n    }  \r\n};\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzHeader;\r\n","import { textFilter, selectFilter } from 'react-bootstrap-table2-filter'; \r\nimport { BiErrorCircle } from 'react-icons/bi';\r\nimport React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nexport const selMethodOpts = {\r\n  'GET': 'GET',\r\n  'POST': 'POST'\r\n};\r\n\r\nexport const selErrOpts = {\r\n  'YES': 'YES',\r\n  'NO': 'NO'\r\n};\r\n\r\nconst responseCodeFormatter = (cell, row, rowIndex, formatExtraData) => {\r\n  if(cell === 'YES') {\r\n    return (\r\n      < BiErrorCircle style={{color:'red', fontSize:'larger'}}/>\r\n    );\r\n  }else {\r\n\r\n  }\r\n}\r\n\r\n/* 테이블 헤더 Formatter */\r\n// const headerFormatter = (column, colIndex, { sortElement, filterElement }) => {\r\n//   return (\r\n//     <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n//       <span>\r\n//         {column.text} {sortElement}\r\n//       </span>\r\n//       {filterElement}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nconst occurrenceDateFormatter = (cell, row) => {\r\n  return (\r\n    <span> <Moment format=\"HH:mm:ss\">{row.occurrenceDate}</Moment> </span>\r\n  );\r\n}\r\n\r\nconst logInfoFormatter = (cell, row) => {\r\n  return (\r\n    <span> { row.logInfo } </span>\r\n  );\r\n}\r\n\r\nconst processTimeFormatter = (cell, row) => {\r\n  return (\r\n    <span> { row.processTime } </span>\r\n  );\r\n}\r\n\r\nexport const logListColumns = [{\r\n    dataField: 'ip',\r\n    text: 'IP',\r\n    //align: 'center',\r\n    headerAlign: 'center',\r\n    style: {width:'15%', maxWidth:'15%'},\r\n    headerStyle: {width:'15%', maxWidth:'15%'},\r\n    filter: textFilter({\r\n      placeholder: 'Enter IP',\r\n      style: {\r\n        maxWidth: '105px',\r\n        fontSize: 'smaller',\r\n      }\r\n    }),\r\n  }, {\r\n    dataField: 'occurrenceDate',\r\n    text: '발생시점',\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    style: {width:'10%', maxWidth:'10%'},\r\n    headerStyle: {width:'10%', maxWidth:'10%'},\r\n    formatter: occurrenceDateFormatter\r\n  }, {\r\n    dataField: 'logInfo',\r\n    text: 'URL',\r\n    style: {width:'55%', maxWidth:'55%'},\r\n    headerStyle: {width:'55%', maxWidth:'55%'},\r\n    filter: textFilter({\r\n      placeholder: 'Enter URL',\r\n      style: {\r\n        fontSize: 'smaller',\r\n      }\r\n    }),\r\n    formatter: logInfoFormatter\r\n  }, {\r\n    dataField: 'processMethod',\r\n    text: 'HTTP Method',\r\n    align: 'center',\r\n    headerAlign: 'center',\r\n    formatter: cell => selMethodOpts[cell],\r\n    filter: selectFilter({\r\n      options: selMethodOpts,\r\n      placeholder: 'ALL',\r\n      style: {\r\n        maxWidth: '75px',\r\n        alignItems: 'center'\r\n      }\r\n    }),\r\n    hidden: true\r\n  }, {\r\n    dataField: 'url',\r\n    text: 'URL',\r\n    hidden: true,\r\n  }, {\r\n    dataField: 'processTime',\r\n    text: '성능(ms)',\r\n    headerAlign: 'center',\r\n    align: 'right',\r\n    style: {width:'10%', maxWidth:'10%'},\r\n    headerStyle: {width:'10%', maxWidth:'10%'},\r\n    formatter: processTimeFormatter\r\n  }, {\r\n    dataField: 'errorYN',\r\n    text: '에러',\r\n    //headerAlign: 'center',\r\n    align: 'center',\r\n    style: {width:'10%', maxWidth:'10%'},\r\n    headerStyle: {width:'10%', maxWidth:'10%'},\r\n    formatter: responseCodeFormatter,\r\n    filter: selectFilter({\r\n      options: selErrOpts,\r\n      placeholder: 'ALL',\r\n      style: {\r\n        maxWidth: '70px',\r\n        fontSize: 'smaller',\r\n      }\r\n    }),\r\n  }];","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: src\\pages\\EzLogViewer\\LogListTable.js\r\n * 3.개요: Log List 테이블\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n  *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React, { Fragment } from \"react\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\r\nimport overlayFactory from 'react-bootstrap-table2-overlay';\r\nimport { logListColumns } from './LogListColumn';\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: LogListTable\r\n// Desc: Log List Table 컴포넌트\r\n// =================================================================================\r\n@inject(\"ezLogViewerStore\")\r\n@observer\r\nclass LogListTable extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzLogViewerList 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n      // this.props.ezLogViewerStore.searchLog();\r\n    }\r\n    // ---------------------------\r\n    // (생명주기) 언마운팅\r\n    // ---------------------------\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 정의된 뷰 컴포넌트 합성 및 통합 렌더링\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 렌더링\r\n    // ---------------------------\r\n    \r\n    render() {\r\n      const loading = this.props.ezLogViewerStore.loading;\r\n\r\n      /* Pagination 옵션 */\r\n      const options = {\r\n        paginationSize: 4,\r\n        pageStartIndex: 1,\r\n        prePageText: 'Prev',\r\n        nextPageText: 'Next',\r\n        showTotal: true,\r\n        //paginationTotalRenderer: customTotal,\r\n        sizePerPageList: [{\r\n          text: '30', value: 30\r\n        }] \r\n      };\r\n\r\n      const rowEvents = {\r\n        onClick: (e, row, rowIndex) => {\r\n          console.log(`clicked on row with index: ${rowIndex}`);\r\n          console.log(row);\r\n\r\n          this.props.ezLogViewerStore.setDetailInfo(row);\r\n        }      \r\n      };\r\n\r\n      if(loading === true ){\r\n        return (\r\n          <Fragment>\r\n          <BootstrapTable \r\n            id=\"logListTable\"\r\n            keyField='id' \r\n            data={ [] } \r\n            columns={ logListColumns } \r\n            filter={ filterFactory()}\r\n            pagination={ paginationFactory(options) } \r\n            hover\r\n            condensed\r\n            wrapperClasses=\"table table-sm table-responsive\"\r\n            rowEvents={ rowEvents }\r\n            rowStyle={{overflow: 'hidden', \r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        }}\r\n            noDataIndication={ () => <LoadingIndication/> }\r\n            loading={ loading }\r\n            overlay={ overlayFactory({ spinner: true, styles: { overlay: (base) => ({...base, background:'#212529'}) } }) }\r\n          />\r\n          </Fragment>\r\n        );  \r\n      }\r\n      else {\r\n        return (\r\n          <Fragment>\r\n          <BootstrapTable \r\n            id=\"logListTable\"\r\n            keyField='id' \r\n            data={ this.props.ezLogViewerStore.controllerList } \r\n            columns={ logListColumns } \r\n            filter={ filterFactory()}\r\n            pagination={ paginationFactory(options) } \r\n            hover\r\n            condensed\r\n            wrapperClasses=\"table table-sm table-responsive\"\r\n            rowEvents={ rowEvents }\r\n            rowStyle={{overflow: 'hidden', \r\n                        whiteSpace: 'nowrap',\r\n                        textOverflow: 'ellipsis',\r\n                        }}\r\n            noDataIndication={ () => <NoDataIndication/> }\r\n            loading={ loading }\r\n            //overlay={ overlayFactory({ spinner: true, styles: { overlay: (base) => ({...base, background:'#212529'}) } }) }\r\n          />\r\n          </Fragment>\r\n        );  \r\n      }\r\n    }\r\n    \r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n        console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n}\r\n\r\n// ---------------------------\r\n// Loading 표시\r\n// ---------------------------\r\nconst LoadingIndication = () => (\r\n  <div style={{textAlign:'center'}}>\r\n    <br/>\r\n    <h4> Loading... </h4>\r\n    <br/>\r\n  </div>\r\n);\r\n\r\n// ---------------------------\r\n// Data 없음 표시\r\n// ---------------------------\r\nconst NoDataIndication = () => (\r\n    <div style={{textAlign:'center'}}>\r\n      <br/>\r\n      <h4> No Data... </h4>\r\n      <br/>\r\n    </div>\r\n);\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default LogListTable;","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: src\\pages\\EzLogViewer\\EzLogViewerList.js\r\n * 3.개요: Log Viewer 리스트 처리 주영역 (뷰)\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n  *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React, { Fragment } from \"react\";\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { FcSurvey} from \"react-icons/fc\";\r\nimport LogListTable from './LogListTable';\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: EzLogViewerList\r\n// Desc: Log List 뷰(컨테이너) 컴포넌트\r\n// =================================================================================\r\nclass EzLogViewerList extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzLogViewerList 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n\r\n    }\r\n    // ---------------------------\r\n    // (생명주기) 언마운팅\r\n    // ---------------------------\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 정의된 뷰 컴포넌트 합성 및 통합 렌더링\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 렌더링\r\n    // ---------------------------\r\n    render() {\r\n        return (\r\n          <Fragment>\r\n            <Container>\r\n              <Row className=\"p-2 mt-4\">\r\n                <h4>&nbsp;&nbsp;<FcSurvey/> 로그 목록 </h4>\r\n              </Row>\r\n              <Row className=\"border\">\r\n                <Container id=\"logListContent\">\r\n                  <br/>\r\n                  <LogListTable/>\r\n                </Container>\r\n              </Row>\r\n            </Container>\r\n          </Fragment>\r\n        );\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n      console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n}\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzLogViewerList;","export const logDetailColumns = [{\r\n  dataField: 'service',\r\n  text: '서비스 명'\r\n}, {\r\n  dataField: 'method',\r\n  text: '메서드 명'\r\n}, {\r\n  dataField: 'processTime',\r\n  text: '성능(ms)',\r\n  align: 'right',\r\n}];","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: src\\pages\\EzLogViewer\\LogDetailTable.js\r\n * 3.개요: Log 상세정보 테이블\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n  *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React from \"react\";\r\nimport { inject } from \"mobx-react\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { logDetailColumns } from './LogDetailColumn';\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: LogDetailTable\r\n// Desc: Log 상세정보 테이블 컴포넌트\r\n// =================================================================================\r\n@inject(\"ezLogViewerStore\")\r\nclass LogDetailTable extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzLogViewerList 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n    }\r\n    // ---------------------------\r\n    // (생명주기) 언마운팅\r\n    // ---------------------------\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 정의된 뷰 컴포넌트 합성 및 통합 렌더링\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 렌더링\r\n    // ---------------------------\r\n    \r\n    render() {\r\n      return (\r\n        <BootstrapTable \r\n          id='logDetailTable'\r\n          keyField='id' \r\n          data={ this.props.ezLogViewerStore.detailList } \r\n          columns={ logDetailColumns } \r\n          condensed\r\n          wrapperClasses=\"table table-sm table-responsive\"\r\n          rowStyle={{overflow: 'hidden', \r\n                      whiteSpace: 'nowrap',\r\n                      textOverflow: 'ellipsis',\r\n                      }}\r\n        />\r\n      );  \r\n    }\r\n    \r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n        console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n}\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default LogDetailTable;","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: src\\pages\\EzLogViewer\\EzLogViewerDetail.js\r\n * 3.개요: Log Viewer 상세정보 처리 주영역 (뷰)\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n  *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React, { Fragment } from \"react\";\r\nimport { Container, Row, Button } from 'react-bootstrap';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { FcAnswers } from \"react-icons/fc\";\r\nimport { IoMdArrowDropright } from \"react-icons/io\";\r\nimport ReactJson from 'react-json-view';\r\nimport LogDetailTable from \"./LogDetailTable\";\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: EzLogViewerDetail\r\n// Desc: Log 상세정보 뷰(컨테이너) 컴포넌트\r\n// =================================================================================\r\n@inject(\"ezLogViewerStore\")\r\n@observer\r\nclass EzLogViewerDetail extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzLogViewerDetail 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n    }\r\n    // ---------------------------\r\n    // (생명주기) 언마운팅\r\n    // ---------------------------\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 정의된 뷰 컴포넌트 합성 및 통합 렌더링\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 렌더링\r\n    // ---------------------------\r\n    render() {\r\n      \r\n      return (\r\n        <Fragment>\r\n          <Container>\r\n            <Row className=\"p-2 mt-4\">\r\n              <h4>&nbsp;&nbsp;<FcAnswers/> 로그 상세정보</h4>\r\n            </Row>\r\n            <Row className=\"border\">\r\n              <Container id=\"logDetailContent\">\r\n                <br/>\r\n                <div><IoMdArrowDropright/><b>{this.props.ezLogViewerStore.url}</b></div><br/>\r\n                <LogDetailTable/>\r\n                <div><IoMdArrowDropright/><b>Status Code </b> :  {this.props.ezLogViewerStore.statusCode}</div><br/>\r\n                <div><IoMdArrowDropright/><b>Response</b></div>\r\n                <ReactJson src={this.props.ezLogViewerStore.response} theme=\"tube\" />\r\n                <br/>\r\n              </Container>\r\n            </Row>\r\n          </Container>\r\n        </Fragment>\r\n      );\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n      console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n}\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzLogViewerDetail;","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: src\\pages\\EzLogViewer\\index.js\r\n * 3.개요: Log Viewer 앱 메인 (서브모듈 통합 및 내보내기 처리)\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n  *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport React, { Fragment } from \"react\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport EzLogViewerList from \"./EzLogViewerList\";\r\nimport EzLogViewerDetail from \"./EzLogViewerDetail\";\r\n\r\n// =================================================================================\r\n// Type: (뷰) 클래스 컴포넌트\r\n// Name: EzLogViewer\r\n// Desc: Log Viewer 최상위 뷰(컨테이너) 컴포넌트\r\n// =================================================================================\r\nclass EzLogViewer extends React.Component {\r\n    // ---------------------------------------------------------------------------------\r\n    // 로컬 데이터 모델 정의 (Class[States, Props, Emits], Function, Object...)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (지역) 데이터 선언 및 초기화 (지역)\r\n    // ---------------------------\r\n    displayName = \"{EzLogViewer 뷰(컨테이너)}\";\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 리액트 생명주기 함수 선언 (클래스형: (슈퍼) 생성자 포함)\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 생성\r\n    // ---------------------------\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    // ---------------------------\r\n    // (생명주기) 마운팅\r\n    // ---------------------------\r\n    componentDidMount() {\r\n    }\r\n    // ---------------------------\r\n    // (생명주기) 언마운팅\r\n    // ---------------------------\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 정의된 뷰 컴포넌트 합성 및 통합 렌더링\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // (생명주기) 렌더링\r\n    // ---------------------------\r\n    render() {\r\n        return (\r\n          <Fragment>\r\n            <Container bg=\"dark\" className=\"text-left\" fluid>\r\n              <Row>\r\n                <Col lg=\"6\" id=\"logList\">\r\n                  <EzLogViewerList/>\r\n                </Col>\r\n                <Col lg=\"6\" id=\"logDetail\">\r\n                  <EzLogViewerDetail/>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Fragment>\r\n        );\r\n    }\r\n\r\n    // ---------------------------------------------------------------------------------\r\n    // 내부 UI요소 컴포넌트 및 UI 처리 로직 영역\r\n    // ---------------------------------------------------------------------------------\r\n    // ---------------------------\r\n    // 데이터[모델변수, 상태...] 및 UI요소 핸들러: anyFunc0\r\n    // ---------------------------\r\n    anyFunc0 = () => {\r\n        console.log(`${this.displayName}.anyFunc0() (을)를 호출합니다!`);\r\n    };\r\n}\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzLogViewer;","import React, { Fragment } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport EzHeader from \"./pages/EzHeader\";\r\nimport EzLogViewer from \"./pages/EzLogViewer\";\r\n\r\n@observer class EzLogViewerApp extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div id=\"logViewerContainer\" style={{minHeight: window.innerHeight}}>\r\n          <EzHeader />\r\n          <EzLogViewer />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EzLogViewerApp;","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: \\src\\stores\\EzLogViewerStore.js\r\n * 3.개요: EzLogViewer 뷰(페이지)용 요소 스토어 클래스\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport { observable, action, computed } from \"mobx\";\r\n//import * as EzAgent from '../EzAgent';\r\nimport agent from \"../EzAgent\";\r\n\r\n// =================================================================================\r\n// Type: 클래스 컴포넌트\r\n// Name: EzLogViewerStore\r\n// Desc: 자식요소 스토어 (전역모델)\r\n// =================================================================================\r\n// ---------------------------\r\n// 업무별 파생 스토어(모델)\r\n// ---------------------------\r\nclass EzLogViewerStore {\r\n\r\n    // ---------------------------\r\n    // 로그 목록 처리용 전역 state\r\n    // ---------------------------\r\n    @observable responseList = [];    //API Data\r\n    @observable loading = true;       //LogList 테이블 Loading State\r\n    @observable controllerList = [];  //LogList 테이블 Data (Controller Filtering List)\r\n    @observable isError = undefined;\r\n\r\n    // ---------------------------\r\n    // 로그 상세정보 처리용 전역 state\r\n    // ---------------------------\r\n    @observable url = '';           // URL 정보\r\n    @observable statusCode = '';    // Status Code\r\n    @observable response = [];      // JSON Response\r\n    @observable detailList = [];    // LogDetail 테이블 Data (클릭 row와 동일한 Group ID List)\r\n\r\n\r\n    // ---------------------------\r\n    // API 호출\r\n    // ---------------------------\r\n    @action searchLog = (date) => {\r\n      //const apiData = EzAgent.fetchAPI(date);\r\n      //console.log(apiData);\r\n      \r\n      // const jsonFileUri = \"/_mock/logData.json\";\r\n      const jsonFileUri = \"/_mock/logSample.json\";\r\n      \r\n      this.loadValidation(date);\r\n      //this.loadValidationDummy(jsonFileUri);\r\n    }\r\n\r\n    // ---------------------------\r\n    // 리소스 검증 API 비동기 호출 액션\r\n    // ---------------------------\r\n    @action loadValidation(date) {\r\n      this.loading = true;\r\n      this.isError = undefined;\r\n      \r\n      // state 초기화 \r\n      this.responseList = [];\r\n      this.controllerList = [];\r\n      this.url = '';\r\n      this.statusCode = '';\r\n      this.response = []; \r\n      this.detailList = [];  \r\n\r\n      return agent.EzLogViewer.forResourceValidateLocal(date)\r\n          .then(res => {\r\n              console.log(res);\r\n              // console.log(res.body);\r\n              const editList = this.editResponseList(res);\r\n                this.responseList = editList;\r\n      \r\n                //Controller (로그 리스트 데이터) 추출\r\n                let controllerList = editList.filter(data => data.service.includes('com.ezFhir.station.controller.impl'));\r\n\r\n                console.log(controllerList);  \r\n                this.controllerList = controllerList;\r\n          \r\n                this.setDetailInfo(this.controllerList[0]);\r\n          })\r\n          .catch(action(err => {\r\n              //this.isError = err.response;\r\n              this.isError = err.response && err.response.body && err.response.body.errors;\r\n              console.log(\">>> ERROR =>\", err);\r\n              // throw err;\r\n          }))\r\n          .finally(action(() => { this.loading = false; }));\r\n    }\r\n    // ---------------------------\r\n    // 리소스 검증 API 비동기 호출 액션(mockup 테스트)\r\n    // ---------------------------\r\n    @action loadValidationDummy(jsonFileUri) {\r\n        this.isloading = true;\r\n        this.isError = undefined;\r\n        \r\n        // state 초기화 \r\n        this.responseList = [];\r\n        this.controllerList = [];\r\n        this.url = '';\r\n        this.statusCode = '';\r\n        this.response = []; \r\n        this.detailList = [];  \r\n        \r\n        return agent.EzLogViewer.forResourceValidateDummy(jsonFileUri)\r\n            .then(res => {\r\n                console.log(res);\r\n                // console.log(res.body);\r\n                const editList = this.editResponseList(res);\r\n                this.responseList = editList;\r\n      \r\n                //Controller (로그 리스트 데이터) 추출\r\n                let controllerList = editList.filter(data => data.service.includes('com.ezFhir.station.controller.impl'));\r\n\r\n                console.log(controllerList);  \r\n                this.controllerList = controllerList;\r\n          \r\n                this.setDetailInfo(this.controllerList[0]);\r\n            })\r\n            .catch(action(err => {\r\n                this.isError = err.response && err.response.body && err.response.body.errors;\r\n                console.log(\">>> ERROR =>\", err);\r\n                // throw err;\r\n            }))\r\n            .finally(action(() => { this.loading = false; }));\r\n    }\r\n\r\n    // ---------------------------\r\n    // 로그 상세정보 세팅 \r\n    // ---------------------------\r\n    @action setDetailInfo = (row) => {\r\n\r\n      // 같은 그룹ID 추출\r\n      if(row.processGroupId === null || row.processGroupId.trim() === '' || row.processGroupId === undefined){\r\n        this.detailList = [];\r\n      }else{\r\n        this.detailList = this.responseList.filter(data => data.processGroupId === row.processGroupId);\r\n      }\r\n      \r\n      this.url = row.processMethod+' '+row.url;\r\n      this.statusCode = row.responseCode;\r\n      this.response = row.response;\r\n    }\r\n\r\n    // ---------------------------\r\n    // Response List Data Form 수정\r\n    // ---------------------------\r\n    editResponseList = (data) => {\r\n      let editList = data;\r\n      \r\n      data.forEach(function(item, index, array) {\r\n        let logInfo = item.processMethod + ' ' + item.url;\r\n        editList[index].logInfo = logInfo;\r\n        \r\n        if(item.responseCode !== '200'){  // 200이 아니면 Error!\r\n          editList[index].errorYN = 'YES';\r\n        }else{\r\n          editList[index].errorYN = 'NO';\r\n        }\r\n      });\r\n\r\n      return editList;\r\n    }\r\n}\r\n\r\n// =================================================================================\r\n// 상태관리 저장소 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzLogViewerStore;\r\n","/*********************************************************************************\r\n * 1.프로젝트명: 2020 EMR 인증 및 확산 사업 - Log Viewer 앱\r\n * 2.파일명: \\src\\stores\\EzRootStore.js\r\n * 3.개요: 상태 및 액션 관리를 위한 최상위 전역 스토어 클래스\r\n *\r\n * 4.개정이력:\r\n * <pre>\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |               << 개 정 이 력 ( Modification History ) >>                |\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n *   |    변경일    |     작성자     |               변경내역                  |\r\n *   ---------------------------------------------------------------------------\r\n *      2020.11.09        강민수            최초 생성\r\n *   ―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\r\n * </pre>\r\n * @author 강민수 (minsk0128@ezcaretech.com)\r\n * @since 2020.11.09\r\n * @version 1.0\r\n *\r\n * Copyright (c) 2020 by ezCaretech All rights reserved.\r\n *********************************************************************************/\r\n// =================================================================================\r\n// 의존 및 공유 모듈 임포트 영역 (기본)\r\n// =================================================================================\r\nimport EzLogViewerStore from './EzLogViewerStore';\r\n\r\n// =================================================================================\r\n// Type: 클래스 컴포넌트\r\n// Name: EzRootStore\r\n// Desc: 요소별 스토어 통합관리를 위한 앱 최상위 스토어 (전역모델)\r\n// =================================================================================\r\n// ---------------------------\r\n// 루트 스토어(모델)\r\n// ---------------------------\r\nclass EzRootStore {\r\n    constructor() {\r\n        // 'this' (최상위 스토어 자신)를 바인딩\r\n        this.ezLogViewerStore = new EzLogViewerStore(this);\r\n        // 자식 스토어(리듀서)가 계속 추가될 영역\r\n        // ...\r\n    }\r\n}\r\n\r\n// =================================================================================\r\n// 모듈 외부 공개\r\n// =================================================================================\r\nexport default EzRootStore;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EzLogViewerApp from './EzLogViewerApp';\nimport { Provider } from \"mobx-react\";\nimport EzRootStore from \"./stores/EzRootStore\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst ezRootStore = new EzRootStore();\n\nconst RenderComponent = () => (\n  <Provider {...ezRootStore}>\n    <EzLogViewerApp />\n  </Provider>\n);\n\nReactDOM.render(<RenderComponent />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// ---------------------------------------------------------------------------------\n// 의존 및 공유 모듈 임포트 영역\n// ---------------------------------------------------------------------------------\nimport _superagent from 'superagent';\nimport superagentPromise from 'superagent-promise';\n\n//const API_ROOT = 'http://10.2.40.27:8080';\nconst API_ROOT = 'http://10.2.16.22:8080';\nconst API_ROOT_DUMMY = 'http://localhost:3000';\n// const encode = encodeURIComponent;\nconst superagent = superagentPromise(_superagent, global.Promise);\n\nconst handleErrors = err => {\n  console.log(err);\n  if (err && err.response && err.response.status === 401) {\n    window.console.debug(err);\n  }\n  return err;\n};\n\nconst responseBody = res => res.body;\n\n// ---------------------------\n// API 비동기 요청 처리객체 정의 (기본 요청 Method)\n// ---------------------------\nconst requests = {\n  del: url =>\n    superagent.del(`${API_ROOT}${url}`)\n      .end(handleErrors)\n      .then(responseBody)\n      ,\n  get: url =>\n    superagent.get(`${API_ROOT}${url}`)\n      .set('Accept', 'application/json')\n      // .set('Access-Control-Allow-Origin', '*')\n      // .withCredentials() \n      .end(handleErrors)\n      .then(responseBody)\n      ,\n  put: (url, body) =>\n    superagent.put(`${API_ROOT}${url}`, body)\n      .end(handleErrors)\n      .then(responseBody)\n      ,\n  post: (url, body) =>\n    superagent.post(`${API_ROOT}${url}`, body)\n      .end(handleErrors)\n      .then(responseBody)\n      ,\n  getFile: url =>\n    superagent.get(`${API_ROOT_DUMMY}${url}`)\n      .end(handleErrors)\n      .then(responseBody)\n};\n\n// ---------------------------\n// Back-End API 서비스별 Wrapper 모듈 (EzLogViewer)\n// ---------------------------\nconst EzLogViewer = {\n  forResourceValidate: (date) => requests.get(`/ezfhir-log?date=${date}`),\n  forResourceValidateLocal: (date) => requests.get(`/ezframework/ezfhir-log?date=${date}`),\n  forResourceValidateDummy: (jsonFileUri) => requests.getFile(`/${jsonFileUri}`)\n};\n\n// ---------------------------------------------------------------------------------\n// 모듈 외부 공개\n// ---------------------------------------------------------------------------------\nexport default {\n  EzLogViewer\n};\n"],"sourceRoot":""}